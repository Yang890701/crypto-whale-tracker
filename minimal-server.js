require('dotenv').config();
const express = require('express');
const axios = require('axios');

const app = express();
const PORT = process.env.PORT || 3000;

app.use(express.json());
app.use(express.static('public'));

// ц╕мшйж Codex API
app.get('/api/test', async (req, res) => {
    const apiKey = process.env.CODEX_API_KEY;
    
    if (!apiKey) {
        return res.json({
            success: false,
            message: 'шлЛшинч╜о CODEX_API_KEY чТ░хвГшоКцХ╕'
        });
    }

    try {
        const response = await axios.post('https://api.codex.io/graphql', {
            query: `
                query {
                    filterTokens(
                        phrase: "ETH"
                        filters: { networkIds: [1] }
                        limit: 1
                    ) {
                        nodes {
                            address
                            name
                            symbol
                        }
                    }
                }
            `
        }, {
            headers: {
                'Content-Type': 'application/json',
                'x-api-key': apiKey
            }
        });

        res.json({
            success: true,
            message: 'Codex API щАгцОецИРхКЯ',
            data: response.data.data,
            timestamp: new Date().toISOString()
        });

    } catch (error) {
        res.json({
            success: false,
            message: error.message,
            timestamp: new Date().toISOString()
        });
    }
});

// ца╣ш╖пчФ▒
app.get('/', (req, res) => {
    res.send(`
        <h1>ЁЯФН Codex API ц╕мшйж</h1>
        <p>API Key: ${process.env.CODEX_API_KEY ? 'х╖▓шинч╜о' : 'цЬкшинч╜о'}</p>
        <a href="/api/test">ц╕мшйж Codex API</a>
    `);
});

app.listen(PORT, () => {
    console.log(`ЁЯМР цЬНхЛЩхЩищБЛшбМхЬичлпхПг ${PORT}`);
    console.log(`ЁЯФС Codex API Key: ${process.env.CODEX_API_KEY ? 'х╖▓шинч╜о' : 'цЬкшинч╜о'}`);
});

module.exports = app;